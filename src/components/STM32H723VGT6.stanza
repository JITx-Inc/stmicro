; This file is generated based on the parts database query below:")
;   database-part(["manufacturer" => "STMICROELECTRONICS", "mpn" => "STM32H723VGT6"])
#use-added-syntax(jitx)
defpackage stmicro/components/STM32H723VGT6 :
  import core
  import jitx
  import jitx/commands
  import jitx/parts

  import jsl
  import power-systems

  import stmicro/components/STM32H723VGT6-supports


; package params
val STM-LQFP100 =
  QFP(
    num-leads = 100
    lead-profile = QFP-Lead-Profile(
      span = 16.0 +/- 0.2
      pitch = 0.5
      lead-length = 0.6 +/- 0.15
      lead-width = 0.22 +/- 0.05
    )
    thermal-lead? = false
    package-body = PackageBody(
      width = 14.0 +/- 0.2
      length = 14.0 +/- 0.2
      height = 1.55 +/- 0.05
    )
  )


public pcb-component device :
  name = "STM32H723VGT6"
  description = "1MB 1.71V~3.6V ARM-MSeries 176KB 550MHz FLASH 80 LQFP-100(14x14)  Microcontroller Units (MCUs/MPUs/SOCs) ROHS"
  manufacturer = "STMICROELECTRONICS"
  ; mpn = "STM32H723VGT6"
  datasheet = "https://datasheet.lcsc.com/lcsc/2304140030_STMicroelectronics-STM32H723VGT6_C730142.pdf"
  reference-prefix = "U"
  property(self.stm32-series) = "STM32H7"
  property(self.stm32-refname) = "STM32F407Z(E-G)Tx"
  property(self.stm32-mfg-package) = "LQFP-100(14x14)"
  property(self.rated-temperature) = min-max(-40.0, 105.0)

  pin-properties :
    [pin:Ref | pads:Int ... | side:Dir | stm32-pin-name:String ]
    ; power
    [ VDD[0]         |  11 | Right | "VDD"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VDD[1]         |  27 | Right | "VDD"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VDD[2]         |  50 | Right | "VDD"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VDD[3]         |  75 | Right | "VDD"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VDD[4]         | 100 | Right | "VDD"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VDDA           |  21 | Right | "VDDA"           ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VREF+          |  20 | Right | "VREF+"          ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VCAP[0]        |  48 | Left  | "VCAP_1"         ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VCAP[1]        |  73 | Left  | "VCAP_2"         ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VSS[0]         |  10 | Left  | "VSS"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VSS[1]         |  26 | Left  | "VSS"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VSS[2]         |  49 | Left  | "VSS"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VSS[3]         |  74 | Left  | "VSS"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VSS[4]         |  99 | Left  | "VSS"            ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VSSA           |  19 | Left  | "VSSA"           ] ;| S   | -   | -      | -                                                                                                                   | -
    [ VBAT           |   6 | Right | "VBAT"           ] ;| S   | -   | -      | -                                                                                                                   | -

    ; PA
    [ PA[0]          |  22 | Left  | "PA0-WKUP"       ] ;| I/O | FT  | (5)    | TIM2_CH1/TIM2_ETR, TIM5_CH1, TIM8_ETR, TIM15_BKIN, SPI6_NSS/I2S6_WS, USART2_CTS/USART2_NSS, UART4_TX, SDMMC2_CMD, SAI4_SD_B, ETH_MII_CRS, FMC_A19, EVENTOUT | ADC1_INP16, WKUP1
    [ PA[1]          |  23 | Left  | "PA1"            ] ;| I/O | FT  | (4)    | TIM2_CH2, TIM5_CH2, LPTIM3_OUT, TIM15_CH1N, USART2_RTS/USART2_DE, UART4_RX, OCTOSPIM_P1_IO3, SAI4_MCLK_B, ETH_MII_RX_CLK/ETH_RMII_REF_C LK, OCTOSPIM_P1_DQS, LCD_R2, EVENTOUT | ADC1_INN16, ADC1_INP17
    [ PA[2]          |  24 | Left  | "PA2"            ] ;| I/O | FT  | (4)    | TIM2_CH3, TIM5_CH3, LPTIM4_OUT, TIM15_CH1, OCTOSPIM_P1_IO0, USART2_TX(boot), SAI4_SCK_B, ETH_MDIO, MDIOS_MDIO, LCD_R1, EVENTOUT | ADC12_INP14, WKUP2
    [ PA[3]          |  25 | Left  | "PA3"            ] ;| I/O | FT  | (4)    | TIM2_CH4, TIM5_CH4, LPTIM5_OUT, TIM15_CH2, I2S6_MCK, OCTOSPIM_P1_IO2, USART2_RX(boot), LCD_B2, OTG_HS_ULPI_D0, ETH_MII_COL, OCTOSPIM_P1_CLK, LCD_B5, EVENTOUT | ADC12_INP15
    [ PA[4]          |  28 | Left  | "PA4"            ] ;| I/O | TTa | (4)    | D1PWREN, TIM5_ETR, SPI1_NSS(boot)/I2S1_WS, SPI3_NSS/I2S3_WS, USART2_CK, SPI6_NSS/I2S6_WS, FMC_D8/FMC_AD8, DCMI_HSYNC/PSSI_DE, LCD_VSYNC, EVENTOUT | ADC12_INP18, DAC1_OUT1
    [ PA[5]          |  29 | Left  | "PA5"            ] ;| I/O | TTa | (4)    | D2PWREN, TIM2_CH1/TIM2_ETR, TIM8_CH1N, SPI1_SCK(boot)/I2S1_CK, SPI6_SCK/I2S6_CK, OTG_HS_ULPI_CK, FMC_D9/FMC_AD9, PSSI_D14, LCD_R4, EVENTOUT | ADC12_INN18, ADC12_INP19, DAC1_OUT2
    [ PA[6]          |  30 | Left  | "PA6"            ] ;| I/O | FT  | (4)    | TIM1_BKIN, TIM3_CH1, TIM8_BKIN, SPI1_MISO(boot)/I2S1_SDI, OCTOSPIM_P1_IO3, SPI6_MISO/I2S6_SDI, TIM13_CH1, TIM8_BKIN_COMP12, MDIOS_MDC, TIM1_BKIN_COMP12, DCMI_PIXCLK/PSSI_PDCK, LCD_G2, EVENTOUT | ADC12_INN3, ADC12_INP7, OPAMP1_VINM
    [ PA[7]          |  31 | Left  | "PA7"            ] ;| I/O | FT  | (4)    | TIM1_CH1N, TIM3_CH2, TIM8_CH1N, SPI1_MOSI(boot)/I2S1_SDO, SPI6_MOSI/I2S6_SDO, TIM14_CH1, OCTOSPIM_P1_IO2, ETH_MII_RX_DV/ETH_RMII_CRS_DV, FMC_SDNWE, LCD_VSYNC, EVENTOUT | ADC12_INN3, ADC12_INP7, OPAMP1_VINM
    [ PA[8]          |  67 | Left  | "PA8"            ] ;| I/O | FT  | -      | MCO1, TIM1_CH1, TIM8_BKIN2, I2C3_SCL(boot), I2C5_SCL, USART1_CK, OTG_HS_SOF, UART7_RX, TIM8_BKIN2_COMP12, LCD_B3, LCD_R6, EVENTOUT | -
    [ PA[9]          |  68 | Left  | "PA8"            ] ;| I/O | FT  | -      | TIM1_CH2, LPUART1_TX, I2C3_SMBA, SPI2_SCK/I2S2_CK, I2C5_SMBA, USART1_TX(boot), ETH_TX_ER, DCMI_D0/PSSI_D0, LCD_R5, EVENTOUT | OTG_HS_VBUS
    [ PA[10]         |  69 | Left  | "PA8"            ] ;| I/O | FT  | -      | TIM1_CH3, LPUART1_RX, USART1_RX(boot), OTG_HS_ID, MDIOS_MDIO, LCD_B4, DCMI_D1/PSSI_D1, LCD_B1, EVENTOUT | -
    [ PA[11]         |  70 | Left  | "PA8"            ] ;| I/O | FT  | -      | TIM1_CH4, LPUART1_CTS, SPI2_NSS/I2S2_WS, UART4_RX, USART1_CTS/USART1_NSS, FDCAN1_RX, LCD_R4, EVENTOUT | OTG_HS_DM (boot)
    [ PA[12]         |  71 | Left  | "PA12"           ] ;| I/O | FT  | -      | TIM1_ETR, LPUART1_RTS/LPUART1_DE, SPI2_SCK/I2S2_CK, UART4_TX, USART1_RTS/USART1_DE, SAI4_FS_B, FDCAN1_TX, TIM1_BKIN2, LCD_R5, EVENTOUT | OTG_HS_DP (boot)
    [ PA[13]         |  72 | Left  | "PA13"           ] ;| I/O | FT  | -      | JTMS-SWDIO,EVENTOUT                                                                                                 | -
    [ PA[14]         |  76 | Left  | "PA14"           ] ;| I/O | FT  | -      | JTCK-SWCLK,EVENTOUT                                                                                                 | -
    [ PA[15]         |  77 | Left  | "PA15"           ] ;| I/O | FT  | -      | JTDI, TIM2_CH1/TIM2_ETR, CEC, SPI1_NSS/I2S1_WS, SPI3_NSS(boot)/I2S3_WS, SPI6_NSS/I2S6_WS, UART4_RTS/UART4_DE, LCD_R3, UART7_TX, LCD_B6, EVENTOUT | -

    ; PB
    [ PB[0]          |  34 | Right | "PB0"            ] ;| I/O | FT  | (4)    | TIM1_CH2N, TIM3_CH3, TIM8_CH2N, OCTOSPIM_P1_IO1, DFSDM1_CKOUT, UART4_CTS, LCD_R3, OTG_HS_ULPI_D1, ETH_MII_RXD2, LCD_G1, EVENTOUT | ADC12_INN5, ADC12_INP9, OPAMP1_VINP, COMP1_INP
    [ PB[1]          |  35 | Right | "PB1"            ] ;| I/O | FT  | (4)    | TIM1_CH3N, TIM3_CH4, TIM8_CH3N, OCTOSPIM_P1_IO0, DFSDM1_DATIN1, LCD_R6, OTG_HS_ULPI_D2, ETH_MII_RXD3, LCD_G0, EVENTOUT | ADC12_INP5, COMP1_INM
    [ PB[2]          |  36 | Right | "PB2"            ] ;| I/O | FT  | -      | RTC_OUT, SAI4_D1, SAI1_D1, DFSDM1_CKIN1, SAI1_SD_A, SPI3_MOSI/I2S3_SDO, SAI4_SD_A, OCTOSPIM_P1_CLK, OCTOSPIM_P1_DQS, ETH_TX_ER, TIM23_ETR, EVENTOUT | COMP1_INP
    [ PB[3]          |  89 | Left  | "PB3"            ] ;| I/O | FT  | -      | JTDO/TRACESWO, TIM2_CH2, SPI1_SCK/I2S1_CK, SPI3_SCK/I2S3_CK, SPI6_SCK/I2S6_CK, SDMMC2_D2, CRS_SYNC, UART7_RX, TIM24_ETR, EVENTOUT | -
    [ PB[4]          |  90 | Left  | "PB4"            ] ;| I/O | FT  | -      | NJTRST, TIM16_BKIN, TIM3_CH1, SPI1_MISO/I2S1_SDI, SPI3_MISO/I2S3_SDI, SPI2_NSS/I2S2_WS, SPI6_MISO/I2S6_SDI, SDMMC2_D3, UART7_TX, EVENTOUT | -
    [ PB[5]          |  91 | Right | "PB5"            ] ;| I/O | FT  | -      | TIM17_BKIN, TIM3_CH2, LCD_B5, I2C1_SMBA, SPI1_MOSI/I2S1_SDO, I2C4_SMBA, SPI3_MOSI/I2S3_SDO, SPI6_MOSI/I2S6_SDO, FDCAN2_RX, OTG_HS_ULPI_D7, ETH_PPS_OUT, FMC_SDCKE1, DCMI_D10/PSSI_D10, UART5_RX, EVENTOUT | -
    [ PB[6]          |  92 | Right | "PB6"            ] ;| I/O | FT  | -      | TIM16_CH1N, TIM4_CH1, I2C1_SCL(boot), CEC, I2C4_SCL, USART1_TX, LPUART1_TX, FDCAN2_TX, OCTOSPIM_P1_NCS, DFSDM1_DATIN5, FMC_SDNE1, DCMI_D5/PSSI_D5, UART5_TX, EVENTOUT | -
    [ PB[7]          |  93 | Right | "PB7"            ] ;| I/O | FT  | -      | TIM17_CH1N, TIM4_CH2, I2C1_SDA, I2C4_SDA, USART1_RX, LPUART1_RX, DFSDM1_CKIN5, FMC_NL, DCMI_VSYNC/PSSI_RDY, EVENTOUT | -
    [ PB[8]          |  95 | Right | "PB8"            ] ;| I/O | FT  | -      | TIM16_CH1, TIM4_CH3, DFSDM1_CKIN7, I2C1_SCL, I2C4_SCL, SDMMC1_CKIN, UART4_RX, FDCAN1_RX, SDMMC2_D4, ETH_MII_TXD3, SDMMC1_D4, DCMI_D6/PSSI_D6, LCD_B6, EVENTOUT | -
    [ PB[9]          |  96 | Right | "PB9"            ] ;| I/O | FT  | -      | TIM17_CH1, TIM4_CH4, DFSDM1_DATIN7, I2C1_SDA(boot), SPI2_NSS/I2S2_WS, I2C4_SDA, SDMMC1_CDIR, UART4_TX, FDCAN1_TX, SDMMC2_D5, I2C4_SMBA, SDMMC1_D5, DCMI_D7/PSSI_D7, LCD_B7, EVENTOUT | -
    [ PB[10]         |  46 | Right | "PB10"           ] ;| I/O | FT  | -      | TIM2_CH3, LPTIM2_IN1, I2C2_SCL, SPI2_SCK/I2S2_CK, DFSDM1_DATIN7, USART3_TX(boot), OCTOSPIM_P1_NCS, OTG_HS_ULPI_D3, ETH_MII_RX_ER, LCD_G4, EVENTOUT | -
    [ PB[11]         |  47 | Right | "PB11"           ] ;| I/O | FT  | -      | TIM2_CH4, LPTIM2_ETR, I2C2_SDA, DFSDM1_CKIN7, USART3_RX(boot), OTG_HS_ULPI_D4, ETH_MII_TX_EN/ETH_RMII_TX_EN, LCD_G5, EVENTOUT | -
    [ PB[12]         |  51 | Right | "PB12"           ] ;| I/O | FT  | -      | TIM1_BKIN, OCTOSPIM_P1_NCLK, I2C2_SMBA, SPI2_NSS/I2S2_WS, DFSDM1_DATIN1, USART3_CK, FDCAN2_RX, OTG_HS_ULPI_D5, ETH_MII_TXD0/ETH_RMII_TXD0, OCTOSPIM_P1_IO0, TIM1_BKIN_COMP12, UART5_RX, EVENTOUT | -
    [ PB[13]         |  52 | Right | "PB13"           ] ;| I/O | FT  | -      | TIM1_CH1N, LPTIM2_OUT, OCTOSPIM_P1_IO2, SPI2_SCK/I2S2_CK, DFSDM1_CKIN1, USART3_CTS/USART3_NSS, FDCAN2_TX, OTG_HS_ULPI_D6, ETH_MII_TXD1/ETH_RMII_TXD1, SDMMC1_D0, DCMI_D2/PSSI_D2, UART5_TX, EVENTOUT | OTG_HS_VBUS
    [ PB[14]         |  53 | Right | "PB14"           ] ;| I/O | FT  | -      | TIM1_CH2N, TIM12_CH1, TIM8_CH2N, USART1_TX, SPI2_MISO/I2S2_SDI, DFSDM1_DATIN2, USART3_RTS/USART3_DE, UART4_RTS/UART4_DE, SDMMC2_D0, FMC_D10/FMC_AD10, LCD_CLK, EVENTOUT | -
    [ PB[15]         |  54 | Right | "PB15"           ] ;| I/O | FT  | -      | RTC_REFIN, TIM1_CH3N, TIM12_CH2, TIM8_CH3N, USART1_RX, SPI2_MOSI/I2S2_SDO, DFSDM1_CKIN2, UART4_CTS, SDMMC2_D1, FMC_D11/FMC_AD11, LCD_G7, EVENTOUT | -

    ; PC
    [ PC[0]          |  15 | Left  | "PC0"            ] ;| I/O | FT  | (4)    | FMC_D12/FMC_AD12, DFSDM1_CKIN0, DFSDM1_DATIN4, SAI4_FS_B, FMC_A25, OTG_HS_ULPI_STP, LCD_G2, FMC_SDNWE, LCD_R5, EVENTOUT | ADC123_INP10
    [ PC[1]          |  16 | Left  | "PC1"            ] ;| I/O | FT  | (4)    | TRACED0, SAI4_D1, SAI1_D1, DFSDM1_DATIN0, DFSDM1_CKIN4, SPI2_MOSI/I2S2_SDO, SAI1_SD_A, SAI4_SD_A, SDMMC2_CK, OCTOSPIM_P1_IO4, ETH_MDC, MDIOS_MDC, LCD_G5, EVENTOUT | ADC123_INN10, ADC123_INP11, RTC_TAMP3, WKUP6
    [ PC[2]          |  17 | Left  | "PC2_C"          ] ;| I/O | FT  | (4)    |                                                                                                                     | ADC3_INN1, ADC3_INP0
    [ PC[3]          |  18 | Left  | "PC3_C"          ] ;| I/O | FT  | (4)    |                                                                                                                     | ADC3_INP1
    [ PC[4]          |  32 | Left  | "PC4"            ] ;| I/O | FT  | (4)    | PWR_DEEPSLEEP, FMC_A22, DFSDM1_CKIN2, I2S1_MCK, SPDIFRX1_IN3, SDMMC2_CKIN, ETH_MII_RXD0/ETH_RMII_RXD0, FMC_SDNE0, LCD_R7, EVENTOUT | ADC12_INN4, ADC12_INP8, OPAMP1_VINM
    [ PC[5]          |  33 | Left  | "PC5"            ] ;| I/O | FT  | (4)    | PWR_SLEEP, SAI4_D3, SAI1_D3, DFSDM1_DATIN2, PSSI_D15, SPDIFRX1_IN4, OCTOSPIM_P1_DQS, ETH_MII_RXD1/ETH_RMII_RXD1, FMC_SDCKE0, COMP1_OUT, LCD_DE, EVENTOUT | ADC12_INN4, ADC12_INP8, OPAMP1_VINM
    [ PC[6]          |  63 | Left  | "PC6"            ] ;| I/O | FT  | -      | TIM3_CH1, TIM8_CH1, DFSDM1_CKIN3, I2S2_MCK, USART6_TX, SDMMC1_D0DIR, FMC_NWAIT, SDMMC2_D6, SDMMC1_D6, DCMI_D0/PSSI_D0, LCD_HSYNC, EVENTOUT | SWPMI_IO
    [ PC[7]          |  64 | Right | "PC7"            ] ;| I/O | FT  | -      | DBTRGIO, TIM3_CH2, TIM8_CH2, DFSDM1_DATIN3, I2S3_MCK, USART6_RX, SDMMC1_D123DIR, FMC_NE1, SDMMC2_D7, SWPMI_TX, SDMMC1_D7, DCMI_D1/PSSI_D1, LCD_G6, EVENTOUT | -
    [ PC[8]          |  65 | Right | "PC8"            ] ;| I/O | FT  | -      | TRACED1, TIM3_CH3, TIM8_CH3, USART6_CK, UART5_RTS/UART5_DE, FMC_NE2/FMC_NCE, FMC_INT, SWPMI_RX, SDMMC1_D0, DCMI_D2/PSSI_D2, EVENTOUT | -
    [ PC[9]          |  66 | Right | "PC9"            ] ;| I/O | FT  | -      | MCO2, TIM3_CH4, TIM8_CH4, I2C3_SDA(boot), I2S_CKIN, I2C5_SDA, UART5_CTS, OCTOSPIM_P1_IO0, LCD_G3, SWPMI_SUSPEND, SDMMC1_D1, DCMI_D3/PSSI_D3, LCD_B2, EVENTOUT | -
    [ PC[10]         |  78 | Right | "PC10"           ] ;| I/O | FT  | -      | DFSDM1_CKIN5, I2C5_SDA, SPI3_SCK(boot)/I2S3_CK, USART3_TX, UART4_TX, OCTOSPIM_P1_IO1, LCD_B1, SWPMI_RX, SDMMC1_D2, DCMI_D8/PSSI_D8, LCD_R2, EVENTOUT | -
    [ PC[11]         |  79 | Right | "PC11"           ] ;| I/O | FT  | -      | DFSDM1_DATIN5, I2C5_SCL, SPI3_MISO(boot)/I2S3_SDI, USART3_RX, UART4_RX, OCTOSPIM_P1_NCS, SDMMC1_D3, DCMI_D4/PSSI_D4, LCD_B4, EVENTOUT | -
    [ PC[12]         |  80 | Right | "PC12"           ] ;| I/O | FT  | -      | TRACED3, FMC_D6/FMC_AD6, TIM15_CH1, I2C5_SMBA, SPI6_SCK/I2S6_CK, SPI3_MOSI(boot)/I2S3_SDO, USART3_CK, UART5_TX, SDMMC1_CK, DCMI_D9/PSSI_D9, LCD_R6, EVENTOUT | -
    [ PC[13]         |   7 | Right | "PC13-ANTI_TAMP" ] ;| I/O | FT  | (2)(3) | EVENTOUT                                                                                                            | RTC_TAMP1/ RTC_TS, WKUP4
    [ PC[14]         |   8 | Right | "PC14-OSC32_IN"  ] ;| I/O | FT  | (2)(3) | EVENTOUT                                                                                                   | OSC32_IN
    [ PC[15]         |   9 | Right | "PC15-OSC32_OUT" ] ;| I/O | FT  | (2)(3) | EVENTOUT                                                                                                  | OSC32_OUT

    ; PD
    [ PD[0]          |  81 | Left  | "PD0"            ] ;| I/O | FT  | -      | DFSDM1_CKIN6, UART4_RX, FDCAN1_RX(boot), UART9_CTS, FMC_D2/FMC_AD2, LCD_B1, EVENTOUT | -
    [ PD[1]          |  82 | Left  | "PD1"            ] ;| I/O | FT  | -      | DFSDM1_DATIN6, UART4_TX, FDCAN1_TX(boot), FMC_D3/FMC_AD3, EVENTOUT | -
    [ PD[2]          |  83 | Left  | "PD2"            ] ;| I/O | FT  | -      | TRACED2, FMC_D7/FMC_AD7, TIM3_ETR, TIM15_BKIN, UART5_RX, LCD_B7, SDMMC1_CMD, DCMI_D11/PSSI_D11, LCD_B2, EVENTOUT | -
    [ PD[3]          |  84 | Left  | "PD3"            ] ;| I/O | FT  | -      | DFSDM1_CKOUT, SPI2_SCK/I2S2_CK, USART2_CTS/USART2_NSS, FMC_CLK, DCMI_D5/PSSI_D5, LCD_G7, EVENTOUT | -
    [ PD[4]          |  85 | Left  | "PD4"            ] ;| I/O | FT  | -      | USART2_RTS/USART2_DE, OCTOSPIM_P1_IO4, FMC_NOE, EVENTOUT | -
    [ PD[5]          |  86 | Left  | "PD5"            ] ;| I/O | FT  | -      | USART2_TX, OCTOSPIM_P1_IO5, FMC_NWE, EVENTOUT | -
    [ PD[6]          |  87 | Left  | "PD6"            ] ;| I/O | FT  | -      | SAI4_D1, SAI1_D1, DFSDM1_CKIN4, DFSDM1_DATIN1, SPI3_MOSI/I2S3_SDO, SAI1_SD_A, USART2_RX, SAI4_SD_A, OCTOSPIM_P1_IO6, SDMMC2_CK, FMC_NWAIT, DCMI_D10/PSSI_D10, LCD_B2, EVENTOUT | -
    [ PD[7]          |  88 | Left  | "PD7"            ] ;| I/O | FT  | -      | DFSDM1_DATIN4, SPI1_MOSI/I2S1_SDO, DFSDM1_CKIN1, USART2_CK, SPDIFRX1_IN1, OCTOSPIM_P1_IO7, SDMMC2_CMD, FMC_NE1, EVENTOUT | -
    [ PD[8]          |  55 | Left  | "PD8"            ] ;| I/O | FT  | -      | DFSDM1_CKIN3, USART3_TX(boot), SPDIFRX1_IN2, FMC_D13/FMC_AD13, EVENTOUT | -
    [ PD[9]          |  56 | Left  | "PD9"            ] ;| I/O | FT  | -      | DFSDM1_DATIN3, USART3_RX(boot), FMC_D14/FMC_AD14, EVENTOUT | -
    [ PD[10]         |  57 | Left  | "PD10"           ] ;| I/O | FT  | -      | DFSDM1_CKOUT, USART3_CK, FMC_D15/FMC_AD15, LCD_B3, EVENTOUT | -
    [ PD[11]         |  58 | Left  | "PD11"           ] ;| I/O | FT  | -      | LPTIM2_IN2, I2C4_SMBA, USART3_CTS/USART3_NSS, OCTOSPIM_P1_IO0, SAI4_SD_A, FMC_A16/FMC_CLE, EVENTOUT | -
    [ PD[12]         |  59 | Left  | "PD12"           ] ;| I/O | FT  | -      | LPTIM1_IN1, TIM4_CH1, LPTIM2_IN1, I2C4_SCL, FDCAN3_RX, USART3_RTS/USART3_DE, OCTOSPIM_P1_IO1, SAI4_FS_A, FMC_A17/FMC_ALE, DCMI_D12/PSSI_D12, EVENTOUT | -
    [ PD[13]         |  60 | Left  | "PD13"           ] ;| I/O | FT  | -      | LPTIM1_OUT, TIM4_CH2, I2C4_SDA, FDCAN3_TX, OCTOSPIM_P1_IO3, SAI4_SCK_A, UART9_RTS/UART9_DE, FMC_A18, DCMI_D13/PSSI_D13, EVENTOUT | -
    [ PD[14]         |  61 | Left  | "PD14"           ] ;| I/O | FT  | -      | TIM4_CH3, UART8_CTS, UART9_RX, FMC_D0/FMC_AD0, EVENTOUT | -
    [ PD[15]         |  62 | Left  | "PD15"           ] ;| I/O | FT  | -      | TIM4_CH4, UART8_RTS/UART8_DE, UART9_TX, FMC_D1/FMC_AD1, EVENTOUT | -

    ; PE
    [ PE[0]          |  97 | Right | "PE0"            ] ;| I/O | FT  | -      | LPTIM1_ETR, TIM4_ETR, LPTIM2_ETR, UART8_RX, SAI4_MCLK_A, FMC_NBL0, DCMI_D2/PSSI_D2, LCD_R0, EVENTOUT | -
    [ PE[1]          |  98 | Right | "PE1"            ] ;| I/O | FT  | -      | LPTIM1_IN2, UART8_TX, FMC_NBL1, DCMI_D3/PSSI_D3, LCD_R6, EVENTOUT | -
    [ PE[2]          |   1 | Right | "PE2"            ] ;| I/O | FT  | -      | TRACECLK, SAI1_CK1, USART10_RX, SPI4_SCK, SAI1_MCLK_A, SAI4_MCLK_A, OCTOSPIM_P1_IO2, SAI4_CK1, ETH_MII_TXD3, FMC_A23, EVENTOUT | -
    [ PE[3]          |   2 | Right | "PE3"            ] ;| I/O | FT  | -      | TRACED0, TIM15_BKIN, SAI1_SD_B, SAI4_SD_B, USART10_TX, FMC_A19, EVENTOUT                                            | -
    [ PE[4]          |   3 | Right | "PE4"            ] ;| I/O | FT  | -      | TRACED1, SAI1_D2, DFSDM1_DATIN3, TIM15_CH1N, SPI4_NSS, SAI1_FS_A, SAI4_FS_A, SAI4_D2, FMC_A20, DCMI_D4/PSSI_D4, LCD_B0, EVENTOUT | -
    [ PE[5]          |   4 | Right | "PE5"            ] ;| I/O | FT  | -      | TRACED2, SAI1_CK2, DFSDM1_CKIN3, TIM15_CH1, SPI4_MISO, SAI1_SCK_A, SAI4_SCK_A, SAI4_CK2, FMC_A21, DCMI_D6/PSSI_D6, LCD_G0, EVENTOUT | -
    [ PE[6]          |   5 | Right | "PE6"            ] ;| I/O | FT  | -      | TRACED3, TIM1_BKIN2, SAI1_D1, TIM15_CH2, SPI4_MOSI, SAI1_SD_A, SAI4_SD_A, SAI4_D1, SAI4_MCLK_B, TIM1_BKIN2_COMP12, FMC_A22, DCMI_D7/PSSI_D7, LCD_G1, EVENTOUT | -
    [ PE[7]          |  37 | Right | "PE7"            ] ;| I/O | FT  | -      | TIM1_ETR, DFSDM1_DATIN2, UART7_RX, OCTOSPIM_P1_IO4, FMC_D4/FMC_AD4, EVENTOUT | OPAMP2_VOUT, COMP2_INM
    [ PE[8]          |  38 | Right | "PE8"            ] ;| I/O | FT  | -      | TIM1_CH1N, DFSDM1_CKIN2, UART7_TX, OCTOSPIM_P1_IO5, FMC_D5/FMC_AD5, COMP2_OUT, EVENTOUT | OPAMP2_VINM
    [ PE[9]          |  39 | Right | "PE9"            ] ;| I/O | FT  | -      | TIM1_CH1, DFSDM1_CKOUT, UART7_RTS/UART7_DE, OCTOSPIM_P1_IO6, FMC_D6/FMC_AD6, EVENTOUT | OPAMP2_VINP, COMP2_INP
    [ PE[10]         |  40 | Right | "PE10"           ] ;| I/O | FT  | -      | TIM1_CH2N, DFSDM1_DATIN4, UART7_CTS, OCTOSPIM_P1_IO7, FMC_D7/FMC_AD7, EVENTOUT | COMP2_INM
    [ PE[11]         |  41 | Right | "PE11"           ] ;| I/O | FT  | -      | TIM1_CH2, DFSDM1_CKIN4, SPI4_NSS(boot), SAI4_SD_B, OCTOSPIM_P1_NCS, FMC_D8/FMC_AD8, LCD_G3, EVENTOUT | COMP2_INP
    [ PE[12]         |  42 | Right | "PE12"           ] ;| I/O | FT  | -      | TIM1_CH3N, DFSDM1_DATIN5, SPI4_SCK(boot), SAI4_SCK_B, FMC_D9/FMC_AD9, COMP1_OUT, LCD_B4, EVENTOUT | -
    [ PE[13]         |  43 | Right | "PE13"           ] ;| I/O | FT  | -      | TIM1_CH3, DFSDM1_CKIN5, SPI4_MISO(boot), SAI4_FS_B, FMC_D10/FMC_AD10, COMP2_OUT, LCD_DE, EVENTOUT | -
    [ PE[14]         |  44 | Right | "PE14"           ] ;| I/O | FT  | -      | TIM1_CH4, SPI4_MOSI(boot), SAI4_MCLK_B, FMC_D11/FMC_AD11, LCD_CLK, EVENTOUT | -
    [ PE[15]         |  45 | Right | "PE15"           ] ;| I/O | FT  | -      | TIM1_BKIN, USART10_CK, FMC_D12/FMC_AD12, TIM1_BKIN_COMP12, LCD_R7, EVENTOUT | -

    ; PH
    [ PH[0]          |  12 | Right | "PH0-OSC_IN"     ] ;| I/O | FT  | -      | OSC_IN,EVENTOUT                                                                                                     | OSC_IN(4)
    [ PH[1]          |  13 | Right | "PH1-OSC_OUT"    ] ;| I/O | FT  | -      | OSC_OUT,EVENTOUT                                                                                                    | OSC_OUT(4)

    [ NRST           |  14 | Left  | "NRST"           ] ;| I/O | RST | -      | -                                                                                                                   | -
    [ BOOT[0]        |  94 | Left  | "BOOT0"          ] ;| I   | B   | -      | -                                                                                                                   | VPP

  ; Setup landpattern
  assign-landpattern $ create-landpattern(STM-LQFP100)

  ; Setup box symbol
  ;val io-r = #R(IO)
  val io-ab-r = #R(IOAB)
  val io-c-r = #R(IOC)
  val io-de-r = #R(IODE)
  val power-r = #R(power)
  val config-r = #R(config)

  val box = BoxSymbol(self)

  ; assign banks
  set-bank(io-ab-r, find-pins-by-regex(box, "P(A|B).*"))
  set-bank(io-c-r, find-pins-by-regex(box, "PC.*"))
  set-bank(io-de-r, find-pins-by-regex(box, "P(D|E).*"))

  ; override config banks
  set-bank(config-r, [self.PB[3], self.PB[4], self.PA[13], self.PA[14], self.PA[15], self.NRST, self.BOOT[0], self.PH[0], self.PH[1], self.PC[14], self.PC[15]])

  set-bank(power-r, find-pins-by-regex(box, "V.*"))

  ; Arrange first IO bank
  ;set-grid(box, [2,2], io-ab-r)

  ;set-row(0, find-pins-by-regex(box, "^PA.*$", bank = io-ab-r))    ; A: left
  ;set-column(0, find-pins-by-regex(box, "^PA.*$", bank = io-ab-r))

  ;set-row(1, find-pins-by-regex(box, "^PB.*$", bank = io-ab-r))    ; B: left
  ;set-column(0, find-pins-by-regex(box, "^PB.*$", bank = io-ab-r))
  ;set-head-margin(1.0, self.PB[0])

  ; TODO
  ;set-row(1, find-pins-by-regex(box, "^PC.*$", bank = io1-r))    ; C: right
  ;set-column(1, find-pins-by-regex(box, "^PC.*$", bank = io1-r))

  ; Arrange power bank
  set-grid(box, [2,2], power-r)
  set-row(1, find-pins-by-regex(box, "VSS.*", bank = power-r))
  set-column(0, find-pins-by-regex(box, "VSS.*", bank = power-r))
  set-alignment(S, find-pins-by-regex(box, "VSS.*", bank = power-r))

  set-row(0, find-pins-by-regex(box, "VCAP.*", bank = power-r))
  set-column(0, find-pins-by-regex(box, "VCAP.*", bank = power-r))
  set-alignment(N, find-pins-by-regex(box, "VCAP.*", bank = power-r))

  set-row(1, find-pins-by-regex(box, "VBAT.*"))
  set-column(1, find-pins-by-regex(box, "VBAT.*"))
  set-alignment(S, find-pins-by-regex(box, "VBAT.*"))

  set-alignment(N, find-pins-by-regex(box, "VDD.*"))
  set-head-margin(1.0, self.VDDA)
  set-head-margin(1.0, self.VREF+)

  ; Arrange config bank
  set-grid(box, [2,2], config-r)

  set-row(0, find-pins-by-regex(box, "P(A|B).*", bank = config-r))
  set-column(0, find-pins-by-regex(box, "P(A|B).*", bank = config-r))

  set-row(1, [self.BOOT[0], self.NRST])
  set-column(0, [self.BOOT[0], self.NRST])

  set-row(0, find-pins-by-regex(box, "PH.*", bank = config-r))
  set-column(1, find-pins-by-regex(box, "PH.*", bank = config-r))

  set-row(1, find-pins-by-regex(box, "PC.*", bank = config-r))
  set-column(1, find-pins-by-regex(box, "PC.*", bank = config-r))

  ; assign symbols
  assign-symbols(
    io-ab-r => box,
    io-c-r => box,
    io-de-r => box,
    config-r => box,
    power-r => box
  )

  property(self.category) = "ic"
  property(self.manufacturer_aliases) = ["STMicroelectronics"]
  property(self.mpn_aliases) = ["STM32H723VGT6"]
  property(self.cofactr_id) = "IMYI4S9AB68G"
  property(self.reference_prefix) = "U"
  property(self.trust) = "low"
  property(self.x) = 16.802
  property(self.y) = 16.802
  property(self.area) = 282.307
  property(self.case) = "LQFP-100(14x14)"
  property(self.mounting) = "smd"

; copy/pasted from ethernet-io-lib
defn get-rail-voltage (p:JITXObject, -- def-V:Double, margin:Double) -> Double :
  ; TODO determine the communication interface here
  ;  Ideally - we are placing a property on the voltage rail pin
  ;  and using that to communicate somehow.
  def-V * margin

public pcb-module module :

  port rail-VDD : power
  port rail-VDDA : power
  port rail-VBAT : power

  port VREF : power

  net GND (rail-VDD.V-, rail-VDDA.V-, rail-VBAT.V-)

  port BOOT

  public inst stm : device

  net (GND, stm.VSSA, VREF.V-)
  for p in ports(stm.VSS) do:
    net (GND, p)

  net (stm.VREF+, VREF.V+)

  ;  The BOOT0 pin is used to control whether the MCU
  ; runs the bootloader on reset or not. By pulling, this
  ; signal high - we can force bootloader mode.
  net (stm.BOOT[0], BOOT)
  insert-pulldown(stm.BOOT[0], GND)

  ;==================================================
  ;== Define supports
  ;==================================================

  ; generate supports
  STM32H723VGT6-supports(stm)

  ;==================================================
  ;== Insert decoupling capacitors
  ;==================================================
  ; See AN4938, Section 2.2 for information
  ;  on decoupling capacitors.

  val bypass-query = CapacitorQuery(
    type = "ceramic",
    temperature-coefficient_code = "X7R",
    sort! = SortKey(rated-voltage = Increasing)
  )

  ; Voltage Margin Relative to the intended voltage.
  ;  This helps set the minimum voltage range to search.
  val cap-margin = 2.0
  ; Set a maximum voltage search range for components
  val max-voltage = 16.0

  val VDD-voltage = get-rail-voltage(rail-VDD, def-V = 3.3, margin = cap-margin)
  val VDDA-voltage = get-rail-voltage(rail-VDDA, def-V = 3.3, margin = cap-margin)
  val BAT-voltage = get-rail-voltage(rail-VBAT, def-V = 3.3, margin = cap-margin)

  val max-rail-V = maximum([VDD-voltage, VDDA-voltage, BAT-voltage])

  ; Per Pin Decoupler
  val fine-C = create-capacitor(
    bypass-query,
    capacitance = 0.1e-6,
    rated-voltage = Interval(max-rail-V, max-voltage)
    case = ["0402"]
  )

  ; Bulk Capacitance - We place one of these per rail.
  val bulk-C = create-capacitor(
    bypass-query,
    capacitance = 4.7e-6
    rated-voltage = Interval(max-rail-V, max-voltage)
    case = ["0603", "0805", "1206"]
  )

  ; rail-VDD
  for v in ports(stm.VDD) do :
    net (v, rail-VDD.V+)
    val c = insert-bypass(v, GND, elem-type = fine-C)
    schematic-group(c) = bypass-cap-IO

  val cb-vdd = insert-bypass(stm.VDD[0], stm.VSS[0], elem-type = bulk-C)
  schematic-group(cb-vdd) = bypass-cap-IO

  ; rail-VDDA
  net (stm.VDDA, rail-VDDA.V+)
  val cvdda = insert-bypass(stm.VDDA, stm.VSSA, elem-type = fine-C)
  val cb-vdda = insert-bypass(stm.VDDA, stm.VSSA, elem-type = bulk-C)
  val cvref = insert-bypass(stm.VREF+, stm.VSSA, elem-type = fine-C)
  schematic-group([cvdda, cb-vdda, cvref]) = bypass-cap-VDDA

  ; rail-VBAT
  ; no bulk decoupler
  net (stm.VBAT, rail-VBAT.V+)
  val cvbat = insert-bypass(stm.VBAT, stm.VSS[0], elem-type = fine-C)
  schematic-group(cvbat) = bypass-cap-VBAT


  val VCAP-C = create-capacitor(
    bypass-query,
    capacitance = 2.2e-6,
    rated-voltage = Interval(max-rail-V, max-voltage)
  )

  net VCAP ()
  for p in ports(stm.VCAP) do :
    net (VCAP, p)
    val c = insert-bypass(p, stm.VSS[0], elem-type = VCAP-C)
    schematic-group(c) = vcap-caps

  ; have to use port here, `node` crashes the pin solver
  ; TODO: is 8 a good number? should i keep is smaller until needed?
  port gnd-fanout:pin[8]
  for p in pins(gnd-fanout) do:
    net (GND p)

  supports usb-2-connector :
    require usb:usb-data
    usb-2-connector.vbus.V+ => stm.PA[9]
    usb-2-connector.vbus.V- => gnd-fanout[0] ; TODO: use pin solver?
    usb-2-connector.bus.data.N => usb.data.N
    usb-2-connector.bus.data.P => usb.data.P
    usb-2-connector.id => stm.PA[10]


doc: \<DOC>
Prototype MCU Circuit

This module contains the implementation of some basic features
for a prototype circuit. It consists of:

1.  The Bootstrap resistor and tactile switch
2.  Optional HW Rev config strap
3.  Optional DIP Switch
4.  Optional 12MHz Crystal Oscillator Circuit

The `stmicro/components/STM32H723VGT6/module` instance
is public via the `mcu` child. The user can directly
access the underlying microcontroller IC via that child.

@param hw-rev-bits Number of bits for a hardware revision
configuration strap, consisting of resistors. If zero, then
no config straps are created.
@param hw-rev Hardware Revision Value - This value is only
valid if `hw-rev-bits` is greater than zero. This value is
encoded into the config straps of the revision bits
@param num-DIP-sw Number of DIP switches to instantiate. Each
also provides a pull-up resistor and connection to a GPIO on
the MCU. If zero, then no DIP switches are created
@param make-oscillator If `true`, the circuit will instantiate
a crystal oscillator circuit at 12MHz

<DOC>
public pcb-module proto-circuit (
  --
  hw-rev-bits:Int = 3,
  hw-rev:Int = 0,
  num-DIP-sw:Int = 4,
  make-oscillator:True|False = true
  ):
  port rail-3v3 : power

  port reset-n
  port boot-ctl

  public inst mcu : stmicro/components/STM32H723VGT6/module

  net (rail-3v3, mcu.rail-VDD)
  net GND (rail-3v3.V-)

  net (reset-n, mcu.stm.NRST)

  ; Analog Interface

  val ferrite = passives/ferrite/BLM18KG(220)
  inst filt-3v3 : unbalanced-filter(ferrite)
  net (rail-3v3, filt-3v3.vin)
  net (filt-3v3.vout, mcu.rail-VDDA)

  ; STM suggests connecting VREF to VDDA even if not used.
  net (filt-3v3.vout, mcu.VREF)

  ;; ---- Crystal ----
  ;  12MHz +/- 50ppm

  if make-oscillator:
    val xtal-type = passives/crystal/FA-238(12)

    val resonator-type = create-crystal-resonator(
      xtal-type = xtal-type,
      C-load = typ(property(xtal-type.C-load))
      ; From Datasheet Section 6.36.16, Table 51, Page 149
      C-stray = typ(5.0e-12),
      V-rating = 2.0 * 3.3 ; AVDDH
    )

    inst resonator : resonator-type
    net (resonator.COMMON, GND)

    require OSC:stmicro/bundles/high-freq-oscillator from mcu

    net (resonator.p[1], OSC.out)
    ; Add a series resistor for dampening if needed.
    insert-resistor(
      resonator.p[2], OSC.in,
      resistance = 0.0,
      precision = (1 %)
    )

  ; BOOT0 - causes the microcontroller to enter bootloader
  ;   mode on reset

  ; Add a jumnper so that we can control this from USB but we can also
  ;  disable it by removing the resistor if we are having trouble.
  insert-resistor(boot-ctl, mcu.BOOT, resistance = 0.0, precision = (1 %))

  ; This switch allows us to manually force the bootloader sequence
  ; on the microcontroller in the case we are not using the microcontroller.
  inst boot-sw : switches/tactile-sw/device
  net (boot-sw.p[1], rail-3v3.V+)
  net (boot-sw.p[2], mcu.BOOT)


  ; DIP Switches for configuration
  if num-DIP-sw > 0:
    inst DIP : switches/DIP-sw/device(num-DIP-sw)

    net dip-cfg:pin[num-DIP-sw]
    for i in 1 through num-DIP-sw do:
      net (dip-cfg[i - 1], DIP.p[i])
      net (GND, DIP.p[i + num-DIP-sw])

      insert-pullup(dip-cfg[i - 1], rail-3v3)

    require dip-gpio:gpio[num-DIP-sw] from mcu
    for i in 0 to num-DIP-sw do:
      net (dip-cfg[i], dip-gpio[i].gpio)

  ; Board Revision Config
  ;  These pullups are for indicating which board version
  ; the hardware represents to the microcontroller at runtime.
  if hw-rev-bits > 0:
    val pullup-R-t = create-resistor(resistance = 4.7e3, precision = (1 %))
    inst configs : ConfigStrap(
      num-elems = hw-rev-bits,
      comp = pullup-R-t,
      pack? = One(LongitudinalPacking(margin = 0.2))
    )
    net (configs.hi, rail-3v3.V+)
    net (configs.lo, GND)

    require straps:config-strap-bus(hw-rev-bits) from configs
    require rev-gpio:gpio[hw-rev-bits] from mcu
    for i in 0 to hw-rev-bits do:
      net (straps.config[i], rev-gpio[i].gpio)

    set-straps-config(configs, hw-rev)